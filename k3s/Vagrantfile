# https://app.vagrantup.com/boxes

Vagrant.configure("2") do |config|

  config.vm.define "mariadb" do |config|
    config.vm.box = "ubuntu/bionic64"
    config.vm.hostname = "mariadb"
    config.vm.box_check_update = false
    config.vm.network "private_network", ip: "192.168.33.51"
    config.vm.synced_folder '.', '/vagrant', disabled: true
    config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.cpus = 1
      vb.memory = "1024"
      # disable logging
      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end

    config.vm.provision "file", source: "docker-compose.yml", destination: "/home/vagrant/docker-compose.yml"
    config.vm.provision "file", source: "create_db.sql", destination: "/home/vagrant/create_db.sql"
    config.vm.provision "file", source: "custom.cnf", destination: "/home/vagrant/custom.cnf"

    config.vm.provision "file", source: "backup.sh", destination: "/home/vagrant/backup.sh"
    config.vm.provision "file", source: "restore.sh", destination: "/home/vagrant/restore.sh"

    config.vm.provision "shell", :inline => <<END
sudo apt-get update

# docker
sudo apt-get install -y \
     apt-transport-https \
     ca-certificates \
     curl \
     gnupg \
     lsb-release

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

echo \
  "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io
sudo usermod -aG docker vagrant

# compose
sudo curl -sL https://github.com/docker/compose/releases/download/1.28.5/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

# mariadb
cd /home/vagrant
mkdir mariadb_data
sudo chown 1001:root mariadb_data
docker-compose up -d

END
  end


  # https://github.com/k3s-io/k3s/releases
  K3S_VERSION="v1.17.15+k3s1"
  K3S_URL="https://192.168.33.52:6443"

  config.vm.define "server1" do |config|
    config.vm.box = "ubuntu/bionic64"
    config.vm.hostname = "server1"
    config.vm.box_check_update = false
    config.vm.network "private_network", ip: "192.168.33.52"
    config.vm.synced_folder '.', '/vagrant', disabled: true
    config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.cpus = 1
      vb.memory = "1024"
      # disable logging
      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end

    config.vm.provision "file", source: "test_pod.yaml", destination: "/home/vagrant/test_pod.yaml"

    config.vm.provision "shell", :inline => <<END

# install k3s server
# https://github.com/k3s-io/k3s/releases
# https://rancher.com/docs/k3s/latest/en/installation/install-options/server-config

export INSTALL_K3S_VERSION="#{K3S_VERSION}"
export K3S_KUBECONFIG_MODE="644"
export INSTALL_K3S_EXEC="--flannel-iface=enp0s8 --disable=traefik"
export K3S_TOKEN="secret"
export K3S_DATASTORE_ENDPOINT="mysql://user:pass@tcp(192.168.33.51:3306)/k3s"

sleep 20 # wait for mariadb
sudo curl -sfL https://get.k3s.io | sh -

# status and logs
# systectl status k3s
# journalctl -u k3s
END
  end


  config.vm.define "agent1" do |config|
    config.vm.box = "ubuntu/bionic64"
    config.vm.hostname = "agent1"
    config.vm.box_check_update = false
    config.vm.network "private_network", ip: "192.168.33.53"
    config.vm.synced_folder '.', '/vagrant', disabled: true
    config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.cpus = 1
      vb.memory = "1024"
      # disable logging
      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end

    config.vm.provision "shell", :inline => <<END
# https://rancher.com/docs/k3s/latest/en/installation/install-options/agent-config
export INSTALL_K3S_VERSION="#{K3S_VERSION}"
export K3S_URL="#{K3S_URL}"
export INSTALL_K3S_EXEC="--flannel-iface=enp0s8"
export K3S_TOKEN="secret"
sudo curl -sfL https://get.k3s.io | sh -
END
  end


  config.vm.define "agent2" do |config|
    config.vm.box = "ubuntu/bionic64"
    config.vm.hostname = "agent2"
    config.vm.box_check_update = false
    config.vm.network "private_network", ip: "192.168.33.54"
    config.vm.synced_folder '.', '/vagrant', disabled: true
    config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.cpus = 1
      vb.memory = "1024"
      # disable logging
      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end

    config.vm.provision "shell", :inline => <<END
# https://rancher.com/docs/k3s/latest/en/installation/install-options/agent-config
export INSTALL_K3S_VERSION="#{K3S_VERSION}"
export K3S_URL="#{K3S_URL}"
export INSTALL_K3S_EXEC="--flannel-iface=enp0s8"
export K3S_TOKEN="secret"
sudo curl -sfL https://get.k3s.io | sh -
END
  end

end
